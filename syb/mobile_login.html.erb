<title>登录到 人人教人人学</title>
  <link href="/stylesheets/css/css.css" rel="stylesheet" type="text/css" />
<div class="login">
	<div class="login-bg">
      <div class="login-title"></div>
              <div class="login-logo"><img src="/img/login_09.png" /></div>
			   <div class="m10"></div>
<%= form_for :pseudonym_session, :url => mobile_path do |f| %>
  <div class="email"><div class="email-ico"></div><input id="email" <%= 'type=email' if @login_handle_is_email %> name="pseudonym_session[unique_id]"></div>
   <div class="m10"></div>
  <div class="password"><div class="password-ico"></div><input id="password" type="password" name="pseudonym_session[password]"></div>
  <div class="m10"></div>
  <% if request.post? && flash[:error] %>
    <div class="error"><%= flash[:error] %></div>
  <% end %>
  <button type="submit" class="login-button">登&nbsp;&nbsp;录</button>
<% end %>
</div>
    </div>

<script>
  var eventToBindTo = ('ontouchstart' in window) ? 'touchstart' : 'click';

  document.addEventListener('DOMContentLoaded', function(){
    var $front_back_container = document.querySelector('#f1_container'),
        $flip_to_back         = document.querySelector('.flip-to-back');

    if ($flip_to_back) {
      $flip_to_back.addEventListener(eventToBindTo, function(event){
        event.preventDefault();
        addClass($front_back_container, 'flipped');
      });
    }

    document.querySelector('.flip-to-front').addEventListener(eventToBindTo, function(event){
      event.preventDefault();
      removeClass($front_back_container, 'flipped');
    });

    var $forgot_password_form = document.querySelector('#forgot_password_form');
    $forgot_password_form.addEventListener('submit', function(event){
      var $button      = $forgot_password_form.querySelector('.request-password-button'),
          originalText = $button.textContent,
          uniqueId     = $forgot_password_form.querySelector('input[name="pseudonym_session[unique_id_forgot]"]').value.trim();
      if (!uniqueId) return false;
      $button.disabled = true;
      $button.textContent = $button.getAttribute('data-text-while-loading')
      event.preventDefault();
      ajax({
        type: "POST",
        url: "/forgot_password",
        data: 'authenticity_token=' +
              encodeURIComponent($forgot_password_form.querySelector('input[name=authenticity_token]').value) +
              '&pseudonym_session%5Bunique_id_forgot%5D=' +
              encodeURIComponent(uniqueId),
        success: function(response){
          alert(ENV.RESET_SENT);
        },
        error: function(){
          alert(ENV.RESET_ERROR);
        },
        complete: function(){
          $button.textContent = originalText;
        }
      });
    });
  });

  function addClass(element, name){
    removeClass(element, name);
    element.className += ' ' + name;
  }

  function removeClass(element, name){
    regex = new RegExp('(^|\\s)' + name + '(\\s|$)');
    element.className = element.className.replace(regex, '')
  }

  function ajax(options){
    var xhr = new window.XMLHttpRequest();
    options.headers = options.headers || {}
    options.headers['X-Requested-With'] = 'XMLHttpRequest'
    if (options.data && !options.contentType) options.contentType = 'application/x-www-form-urlencoded';
    if (options.contentType) options.headers['Content-Type'] = options.contentType;

    xhr.onreadystatechange = function(){
      if (xhr.readyState == 4) {
        var error = false;
        if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 0) {
          options.success && options.success.call(options.context, xhr.responseText, 'success', xhr);
        } else {
          error = true;
          options.error && options.error.call(options.context, xhr, 'error');
        }
        options.complete && options.complete.call(options.context, xhr, error ? 'error' : 'success');
      }
    };

    xhr.open(options.type, options.url, true);
    for (name in options.headers) xhr.setRequestHeader(name, options.headers[name]);
    xhr.send(options.data);
    return xhr;
  }
</script>
